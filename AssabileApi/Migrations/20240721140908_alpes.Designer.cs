// <auto-generated />
using System;
using AssabileApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssabileApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240721140908_alpes")]
    partial class alpes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("French_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssabileApi.Models.Asset", b =>
                {
                    b.Property<string>("AssetCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSET_CODE");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ACCOUNT_CODE");

                    b.Property<string>("Aquisitionmode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("AQUISITIONMODE");

                    b.Property<string>("AssetstatusCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSETSTATUS_CODE");

                    b.Property<string>("Barcode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BARCODE");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit")
                        .HasColumnName("CLOSED");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("CostcenterCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("COSTCENTER_CODE");

                    b.Property<decimal?>("Dprbase")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DPRBASE");

                    b.Property<string>("Dprmodeid")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DPRMODEID");

                    b.Property<DateTime?>("Dprstartdate")
                        .HasColumnType("datetime")
                        .HasColumnName("DPRSTARTDATE");

                    b.Property<string>("Garantiecondition")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("GARANTIECONDITION");

                    b.Property<string>("GarantiecontactCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GARANTIECONTACT_CODE");

                    b.Property<DateTime?>("Garantieenddate")
                        .HasColumnType("datetime")
                        .HasColumnName("GARANTIEENDDATE");

                    b.Property<string>("GarantiepartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GARANTIEPARTNER_CODE");

                    b.Property<decimal?>("Initialvalue")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("INITIALVALUE");

                    b.Property<DateTime?>("Installationdate")
                        .HasColumnType("datetime")
                        .HasColumnName("INSTALLATIONDATE");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.Property<string>("MangementworkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("MANGEMENTWORKSTATION_CODE");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Notes")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NOTES");

                    b.Property<string>("PdelnoteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PDELNOTE_CODE");

                    b.Property<string>("PorderCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PORDER_CODE");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<DateTime?>("Purchasedate")
                        .HasColumnType("datetime")
                        .HasColumnName("PURCHASEDATE");

                    b.Property<string>("SdelnoteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SDELNOTE_CODE");

                    b.Property<int?>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.Property<string>("Serialnumber")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("SERIALNUMBER");

                    b.Property<string>("UpassetCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UPASSET_CODE");

                    b.Property<string>("UserCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERFIELD2");

                    b.Property<string>("WorksiteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSITE_CODE");

                    b.Property<string>("WorkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.HasKey("AssetCode");

                    b.HasIndex("MangementworkstationCode");

                    b.HasIndex("ProductCode");

                    b.HasIndex("UpassetCode");

                    b.HasIndex("WorksiteCode");

                    b.HasIndex("WorkstationCode");

                    b.ToTable("ASSET", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.AssetAttribute", b =>
                {
                    b.Property<string>("AssetCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSET_CODE");

                    b.Property<string>("AttributeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ATTRIBUTE_CODE");

                    b.Property<DateTime?>("Attributedatevalue")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTRIBUTEDATEVALUE");

                    b.Property<decimal?>("Attributenumerictvalue")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("ATTRIBUTENUMERICTVALUE");

                    b.Property<string>("Attributetextvalue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ATTRIBUTETEXTVALUE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.HasKey("AssetCode", "AttributeCode");

                    b.ToTable("ASSET_ATTRIBUTE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Assetconfiguration", b =>
                {
                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("RdaInternetUrl")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RemoteDatabaseName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RemoteInstanceName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.ToTable("ASSETCONFIGURATION", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Backgroundimage", b =>
                {
                    b.Property<string>("BackgroundimageCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BACKGROUNDIMAGE_CODE");

                    b.Property<byte[]>("Backgroundimage1")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasColumnName("BACKGROUNDIMAGE");

                    b.Property<int>("BottomrightX")
                        .HasColumnType("int")
                        .HasColumnName("BOTTOMRIGHT_X");

                    b.Property<int>("BottomrightY")
                        .HasColumnType("int")
                        .HasColumnName("BOTTOMRIGHT_Y");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("NOTES");

                    b.Property<int>("TopleftX")
                        .HasColumnType("int")
                        .HasColumnName("TOPLEFT_X");

                    b.Property<int>("TopleftY")
                        .HasColumnType("int")
                        .HasColumnName("TOPLEFT_Y");

                    b.Property<string>("TransparencycolorCoe")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TRANSPARENCYCOLOR_COE");

                    b.Property<int>("Z")
                        .HasColumnType("int");

                    b.HasKey("BackgroundimageCode")
                        .HasName("PK_OBJECTPICTURE");

                    b.ToTable("BACKGROUNDIMAGE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Bank", b =>
                {
                    b.Property<string>("BankCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BANK_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("BankCode");

                    b.ToTable("BANK", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Branch", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BRANCH_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.HasKey("BranchCode")
                        .HasName("PK_COMPANY_1");

                    b.ToTable("BRANCH", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.CompanyProductsalesgroup", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BRANCH_CODE");

                    b.Property<string>("ProductsalesgroupCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTSALESGROUP_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Footer1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FOOTER1");

                    b.Property<string>("Footer2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FOOTER2");

                    b.Property<string>("Footer3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FOOTER3");

                    b.Property<string>("Footer4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FOOTER4");

                    b.Property<string>("Footer5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FOOTER5");

                    b.Property<string>("Footer6")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FOOTER6");

                    b.Property<string>("Header1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("HEADER1");

                    b.Property<string>("Header2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("HEADER2");

                    b.Property<string>("Header3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("HEADER3");

                    b.Property<string>("Header4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("HEADER4");

                    b.Property<string>("Header5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("HEADER5");

                    b.Property<string>("Header6")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("HEADER6");

                    b.HasKey("BranchCode", "ProductsalesgroupCode")
                        .HasName("PK_COMPANY");

                    b.HasIndex("ProductsalesgroupCode");

                    b.ToTable("COMPANY_PRODUCTSALESGROUP", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Contact", b =>
                {
                    b.Property<string>("ContactCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTACT_CODE");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Assistantname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSISTANTNAME");

                    b.Property<string>("Assistantphone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSISTANTPHONE");

                    b.Property<string>("Cellularphone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CELLULARPHONE");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CITY");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("ContactcategoryCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTACTCATEGORY_CODE");

                    b.Property<string>("ContacttypeCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTACTTYPE_CODE");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("COUNTRY");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FAX");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<string>("JobtitleCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("JOBTITLE_CODE");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.Property<string>("MrMs")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("MR_MS");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NOTES");

                    b.Property<string>("PartnerCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNER_CODE");

                    b.Property<string>("PartnerDepartmentCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNER_DEPARTMENT_CODE");

                    b.Property<string>("PersonCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<string>("Personalphone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSONALPHONE");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE");

                    b.Property<int>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.Property<bool>("Specificaddress")
                        .HasColumnType("bit")
                        .HasColumnName("SPECIFICADDRESS");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("STATE");

                    b.Property<string>("UserCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD2");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ZIPCODE");

                    b.HasKey("ContactCode");

                    b.HasIndex("PartnerCode");

                    b.ToTable("CONTACT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Contract", b =>
                {
                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACT_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("ContactCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTACT_CODE");

                    b.Property<string>("ContractcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACTCATEGORY_CODE");

                    b.Property<string>("ContractcategorytypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACTCATEGORYTYPE_CODE");

                    b.Property<string>("Documentname")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("DOCUMENTNAME");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDDATE");

                    b.Property<string>("Externalreference1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("EXTERNALREFERENCE1");

                    b.Property<string>("Externalreference2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("EXTERNALREFERENCE2");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.Property<string>("PartnerCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNER_CODE");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTDATE");

                    b.Property<string>("WorkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.HasKey("ContractCode");

                    b.HasIndex("PartnerCode");

                    b.ToTable("CONTRACT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Database", b =>
                {
                    b.Property<string>("DatabaseCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DATABASE_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<DateTime>("Lastdataupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTDATAUPDATE");

                    b.Property<DateTime>("Lasttransferdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTTRANSFERDATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<bool>("Selectivedownload")
                        .HasColumnType("bit")
                        .HasColumnName("SELECTIVEDOWNLOAD");

                    b.HasKey("DatabaseCode");

                    b.ToTable("DATABASE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Dbtable", b =>
                {
                    b.Property<string>("Tablename")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("TABLENAME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("Tablename");

                    b.ToTable("DBTABLE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Geoarea", b =>
                {
                    b.Property<string>("GeoareaCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOAREA_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("GeoobjectCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOOBJECT_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Notes")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NOTES");

                    b.Property<string>("UpgeoareaCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UPGEOAREA_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD2");

                    b.HasKey("GeoareaCode")
                        .HasName("PK_LOCATION");

                    b.HasIndex("GeoobjectCode");

                    b.HasIndex("UpgeoareaCode");

                    b.ToTable("GEOAREA", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Geoobject", b =>
                {
                    b.Property<string>("GeoobjectCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOOBJECT_CODE");

                    b.Property<string>("Attribute1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTE1");

                    b.Property<string>("Attribute2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTE2");

                    b.Property<string>("Attribute3")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTE3");

                    b.Property<string>("Attribute4")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTE4");

                    b.Property<string>("Attribute5")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTE5");

                    b.Property<string>("BackgroungcolorCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BACKGROUNGCOLOR_CODE");

                    b.Property<string>("BordercolorCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BORDERCOLOR_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<int>("Geoobjecttype")
                        .HasColumnType("int")
                        .HasColumnName("GEOOBJECTTYPE");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("ObjectCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("OBJECT_CODE");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<int>("Z")
                        .HasColumnType("int");

                    b.HasKey("GeoobjectCode");

                    b.ToTable("GEOOBJECT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.GeoobjectBorder", b =>
                {
                    b.Property<string>("GeoobjectCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOOBJECT_CODE");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<int>("Z")
                        .HasColumnType("int");

                    b.HasKey("GeoobjectCode", "Rank")
                        .HasName("PK_GEOAREA_BORDER");

                    b.ToTable("GEOOBJECT_BORDER", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Geoplan", b =>
                {
                    b.Property<string>("GeoplanCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOPLAN_CODE");

                    b.Property<string>("BackgroundcolorCoe")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BACKGROUNDCOLOR_COE");

                    b.Property<int>("BottomrightX")
                        .HasColumnType("int")
                        .HasColumnName("BOTTOMRIGHT_X");

                    b.Property<int>("BottomrightY")
                        .HasColumnType("int")
                        .HasColumnName("BOTTOMRIGHT_Y");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("NOTES");

                    b.Property<int>("TopleftX")
                        .HasColumnType("int")
                        .HasColumnName("TOPLEFT_X");

                    b.Property<int>("TopleftY")
                        .HasColumnType("int")
                        .HasColumnName("TOPLEFT_Y");

                    b.Property<int>("Z")
                        .HasColumnType("int");

                    b.HasKey("GeoplanCode")
                        .HasName("PK_PLANVIEW");

                    b.ToTable("GEOPLAN", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.GeoplanBackgroundimage", b =>
                {
                    b.Property<string>("GeoplanCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOPLAN_CODE");

                    b.Property<string>("BackgroundimageCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BACKGROUNDIMAGE_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<bool>("Isselected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ISSELECTED");

                    b.HasKey("GeoplanCode", "BackgroundimageCode");

                    b.HasIndex("BackgroundimageCode");

                    b.ToTable("GEOPLAN_BACKGROUNDIMAGE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.GeoplanGeoobject", b =>
                {
                    b.Property<string>("GeoplanCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOPLAN_CODE");

                    b.Property<string>("GeoobjectCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOOBJECT_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<bool>("Isselected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ISSELECTED");

                    b.HasKey("GeoplanCode", "GeoobjectCode");

                    b.HasIndex("GeoobjectCode");

                    b.ToTable("GEOPLAN_GEOOBJECT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Installation", b =>
                {
                    b.Property<string>("InstallationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("INSTALLATION_CODE");

                    b.Property<string>("AssetCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSET_CODE");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit")
                        .HasColumnName("CLOSED");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACT_CODE");

                    b.Property<string>("InstallationcategoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATIONCATEGORY_CODE");

                    b.Property<string>("InstallationcategorytypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATIONCATEGORYTYPE_CODE");

                    b.Property<DateTime?>("Installationdate")
                        .HasColumnType("datetime")
                        .HasColumnName("INSTALLATIONDATE");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<DateTime?>("Uninstallationdate")
                        .HasColumnType("datetime")
                        .HasColumnName("UNINSTALLATIONDATE");

                    b.Property<string>("WorksiteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSITE_CODE");

                    b.HasKey("InstallationCode");

                    b.HasIndex("AssetCode");

                    b.HasIndex("ContractCode");

                    b.HasIndex("WorksiteCode");

                    b.ToTable("INSTALLATION", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Itinerary", b =>
                {
                    b.Property<string>("ItineraryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ITINERARY_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.HasKey("ItineraryCode")
                        .HasName("PK_ITINERARY_1");

                    b.ToTable("ITINERARY", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.ItineraryLine", b =>
                {
                    b.Property<string>("ItineraryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ITINERARY_CODE");

                    b.Property<string>("WorksiteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSITE_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.HasKey("ItineraryCode", "WorksiteCode")
                        .HasName("PK_ITINERARY");

                    b.HasIndex("WorksiteCode");

                    b.ToTable("ITINERARY_LINE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Language", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LANGUAGE_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("LanguageCode");

                    b.ToTable("LANGUAGE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.LanguageTablefieldattribute", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LANGUAGE_CODE");

                    b.Property<string>("Tablename")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("TABLENAME");

                    b.Property<string>("Fieldname")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FIELDNAME");

                    b.Property<string>("Fieldhelp")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("FIELDHELP");

                    b.Property<string>("Fieldlabel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FIELDLABEL");

                    b.HasKey("LanguageCode", "Tablename", "Fieldname")
                        .HasName("PK_prm_FIELD_LANGUAGE_ATTRIBUTE");

                    b.ToTable("LANGUAGE_TABLEFIELDATTRIBUTE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Partner", b =>
                {
                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNER_CODE");

                    b.Property<string>("Address")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Arabicname")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("ARABICNAME");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CITY");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<bool>("Common")
                        .HasColumnType("bit")
                        .HasColumnName("COMMON");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("COUNTRY");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CURRENCY_CODE");

                    b.Property<decimal?>("Currentcredit")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("CURRENTCREDIT");

                    b.Property<decimal?>("Currentcredit2")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("CURRENTCREDIT2");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FAX");

                    b.Property<string>("Fiscalid")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FISCALID");

                    b.Property<bool>("FixedtaxExoneration")
                        .HasColumnType("bit")
                        .HasColumnName("FIXEDTAX_EXONERATION");

                    b.Property<string>("GeoareaCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOAREA_CODE");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit")
                        .HasColumnName("HOLD");

                    b.Property<string>("HoldReason")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("HOLD_REASON");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.Property<decimal?>("Maximumcredit")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("MAXIMUMCREDIT");

                    b.Property<decimal?>("Maximumcredit2")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("MAXIMUMCREDIT2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Name2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME2");

                    b.Property<string>("Notes")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NOTES");

                    b.Property<string>("Partneranalysisgroup1Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERANALYSISGROUP1_CODE");

                    b.Property<string>("Partneranalysisgroup2Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERANALYSISGROUP2_CODE");

                    b.Property<string>("Partneranalysisgroup3Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERANALYSISGROUP3_CODE");

                    b.Property<string>("Partneranalysisgroup4Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERANALYSISGROUP4_CODE");

                    b.Property<string>("Partneranalysisgroup5Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERANALYSISGROUP5_CODE");

                    b.Property<string>("PartnercategoryCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERCATEGORY_CODE");

                    b.Property<string>("Partnerid")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("PARTNERID");

                    b.Property<string>("PartneridtypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERIDTYPE_CODE");

                    b.Property<string>("PartnerstatusCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERSTATUS_CODE");

                    b.Property<string>("PartnertypeCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERTYPE_CODE");

                    b.Property<string>("PaymenttermCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PAYMENTTERM_CODE");

                    b.Property<string>("Phone1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE1");

                    b.Property<string>("Phone2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE2");

                    b.Property<string>("Pricelist2Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRICELIST2_CODE");

                    b.Property<DateTime?>("Pricelist2startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("PRICELIST2STARTDATE");

                    b.Property<string>("PricelistCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRICELIST_CODE");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.Property<string>("RootpartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ROOTPARTNER_CODE");

                    b.Property<string>("SaleschannelCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SALESCHANNEL_CODE");

                    b.Property<int>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.Property<string>("State")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("STATE");

                    b.Property<string>("UppartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UPPARTNER_CODE");

                    b.Property<string>("UserCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD2");

                    b.Property<bool>("Vat1Exoneration")
                        .HasColumnType("bit")
                        .HasColumnName("VAT1_EXONERATION");

                    b.Property<bool>("Vat2Exoneration")
                        .HasColumnType("bit")
                        .HasColumnName("VAT2_EXONERATION");

                    b.Property<string>("Webaddress")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("WEBADDRESS");

                    b.Property<string>("WorkstationCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ZIPCODE");

                    b.HasKey("PartnerCode");

                    b.HasIndex("PartneridtypeCode");

                    b.HasIndex("PartnerstatusCode");

                    b.HasIndex("UppartnerCode");

                    b.HasIndex("WorkstationCode");

                    b.HasIndex("PartnercategoryCode", "PartnertypeCode");

                    b.ToTable("PARTNER", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Partnercategory", b =>
                {
                    b.Property<string>("PartnercategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERCATEGORY_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.Property<string>("UppartnercategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UPPARTNERCATEGORY_CODE");

                    b.HasKey("PartnercategoryCode");

                    b.ToTable("PARTNERCATEGORY", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Partnercategorytype", b =>
                {
                    b.Property<string>("PartnercategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERCATEGORY_CODE");

                    b.Property<string>("PartnercategorytypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERCATEGORYTYPE_CODE");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.HasKey("PartnercategoryCode", "PartnercategorytypeCode");

                    b.ToTable("PARTNERCATEGORYTYPE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Partneridtype", b =>
                {
                    b.Property<string>("PartneridtypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERIDTYPE_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("PartneridtypeCode");

                    b.ToTable("PARTNERIDTYPE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Partnerstatus", b =>
                {
                    b.Property<string>("PartnerstatusCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNERSTATUS_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.HasKey("PartnerstatusCode");

                    b.ToTable("PARTNERSTATUS", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Payment", b =>
                {
                    b.Property<string>("PaymentCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PAYMENT_CODE");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("BankCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BANK_CODE");

                    b.Property<string>("Bankagency")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BANKAGENCY");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit")
                        .HasColumnName("LOCKED");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime")
                        .HasColumnName("MATURITY_DATE");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNER_CODE");

                    b.Property<string>("Payerreference")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("PAYERREFERENCE");

                    b.Property<string>("PaymenttermCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PAYMENTTERM_CODE");

                    b.Property<string>("PersonCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<int>("Printed")
                        .HasColumnType("int")
                        .HasColumnName("PRINTED");

                    b.Property<string>("Reference")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("REFERENCE");

                    b.Property<string>("RoundCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ROUND_CODE");

                    b.Property<DateTime>("Thedate")
                        .HasColumnType("datetime")
                        .HasColumnName("THEDATE");

                    b.Property<string>("VisitCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VISIT_CODE");

                    b.HasKey("PaymentCode");

                    b.ToTable("PAYMENT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Paymentterm", b =>
                {
                    b.Property<string>("PaymenttermCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PAYMENTTERM_CODE");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.HasKey("PaymenttermCode");

                    b.ToTable("PAYMENTTERM", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Person", b =>
                {
                    b.Property<string>("PersonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<string>("Cellularphone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CELLULARPHONE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FAX");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit")
                        .HasColumnName("HOLD");

                    b.Property<string>("HoldReason")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("HOLD_REASON");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LANGUAGE_CODE");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Password")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE");

                    b.Property<string>("ProfileCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PROFILE_CODE");

                    b.Property<int>("Requiredcontrolnumber")
                        .HasColumnType("int")
                        .HasColumnName("REQUIREDCONTROLNUMBER");

                    b.Property<int>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.Property<string>("UserCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERFIELD2");

                    b.HasKey("PersonCode");

                    b.HasIndex("ProfileCode");

                    b.ToTable("PERSON", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.PositionGp", b =>
                {
                    b.Property<string>("CodeInstallation")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CODE_INSTALLATION");

                    b.Property<string>("Readingordercode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDERCODE");

                    b.Property<double?>("Altitude")
                        .HasColumnType("float")
                        .HasColumnName("ALTITUDE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("IMAGE");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("LATITUDE");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("Maricule")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("MARICULE");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TELEPHONE");

                    b.HasKey("CodeInstallation", "Readingordercode");

                    b.ToTable("POSITION_GPS", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.PrmAssabilfunction", b =>
                {
                    b.Property<string>("AssabilfunctionCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSABILFUNCTION_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("AssabilfunctionCode");

                    b.ToTable("prmASSABILFUNCTION", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.PrmReadingorderresult", b =>
                {
                    b.Property<string>("ReadingorderresultCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDERRESULT_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("ReadingorderresultCode")
                        .HasName("PK_READINGORDERRESULT");

                    b.ToTable("prmREADINGORDERRESULT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ACCOUNT_CODE");

                    b.Property<bool>("Apos")
                        .HasColumnType("bit")
                        .HasColumnName("APOS");

                    b.Property<decimal>("Awp")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("AWP");

                    b.Property<string>("BrandCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BRAND_CODE");

                    b.Property<string>("CustomsCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CUSTOMS_CODE");

                    b.Property<string>("Deliveryleadtime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DELIVERYLEADTIME");

                    b.Property<bool>("Emptyproduct")
                        .HasColumnType("bit")
                        .HasColumnName("EMPTYPRODUCT");

                    b.Property<bool>("Equipment")
                        .HasColumnType("bit")
                        .HasColumnName("EQUIPMENT");

                    b.Property<bool>("Expirable")
                        .HasColumnType("bit")
                        .HasColumnName("EXPIRABLE");

                    b.Property<bool>("Facingable")
                        .HasColumnType("bit")
                        .HasColumnName("FACINGABLE");

                    b.Property<bool>("Freegood")
                        .HasColumnType("bit")
                        .HasColumnName("FREEGOOD");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit")
                        .HasColumnName("HOLD");

                    b.Property<string>("HoldReason")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("HOLD_REASON");

                    b.Property<bool>("Inventoryable")
                        .HasColumnType("bit")
                        .HasColumnName("INVENTORYABLE");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.Property<string>("Longdescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("LONGDESCRIPTION");

                    b.Property<string>("ManagementmodeCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("MANAGEMENTMODE_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Netpurchaseprice")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("NETPURCHASEPRICE");

                    b.Property<decimal>("Netsalesprice")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("NETSALESPRICE");

                    b.Property<int?>("Packing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("PACKING");

                    b.Property<bool>("Presencecheckable")
                        .HasColumnType("bit")
                        .HasColumnName("PRESENCECHECKABLE");

                    b.Property<string>("Productanalysisgroup1Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTANALYSISGROUP1_CODE");

                    b.Property<string>("Productanalysisgroup2Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTANALYSISGROUP2_CODE");

                    b.Property<string>("Productanalysisgroup3Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTANALYSISGROUP3_CODE");

                    b.Property<string>("Productanalysisgroup4Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTANALYSISGROUP4_CODE");

                    b.Property<string>("Productanalysisgroup5Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTANALYSISGROUP5_CODE");

                    b.Property<string>("ProductcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTCATEGORY_CODE");

                    b.Property<string>("ProductcategorytypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTCATEGORYTYPE_CODE");

                    b.Property<string>("ProductgroupCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTGROUP_CODE");

                    b.Property<string>("ProductpageCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTPAGE_CODE");

                    b.Property<string>("ProductsalesgroupCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTSALESGROUP_CODE");

                    b.Property<decimal>("Promorate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 4)")
                        .HasDefaultValue(1m)
                        .HasColumnName("PROMORATE");

                    b.Property<int>("Promosequence")
                        .HasColumnType("int")
                        .HasColumnName("PROMOSEQUENCE");

                    b.Property<decimal>("Purchasediscount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("PURCHASEDISCOUNT");

                    b.Property<decimal>("Purchaseprice")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("PURCHASEPRICE");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.Property<bool>("Returnable")
                        .HasColumnType("bit")
                        .HasColumnName("RETURNABLE");

                    b.Property<decimal>("Returnprice")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("RETURNPRICE");

                    b.Property<bool>("Salable")
                        .HasColumnType("bit")
                        .HasColumnName("SALABLE");

                    b.Property<decimal>("Salesdiscount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("SALESDISCOUNT");

                    b.Property<decimal>("Salesmargin")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("SALESMARGIN");

                    b.Property<decimal>("Salesprice")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("SALESPRICE");

                    b.Property<int?>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.Property<decimal>("Shipmentcost")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("SHIPMENTCOST");

                    b.Property<decimal>("Spacerequirement")
                        .HasColumnType("decimal(18, 6)")
                        .HasColumnName("SPACEREQUIREMENT");

                    b.Property<decimal>("Statunitrate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 4)")
                        .HasDefaultValue(1m)
                        .HasColumnName("STATUNITRATE");

                    b.Property<string>("Supplierreference")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SUPPLIERREFERENCE");

                    b.Property<decimal>("TheRate")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("THE_RATE");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("UNIT_CODE");

                    b.Property<string>("UserCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERFIELD2");

                    b.Property<string>("Vat1Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VAT1_CODE");

                    b.Property<string>("Vat2Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VAT2_CODE");

                    b.Property<bool>("Virtualproduct")
                        .HasColumnType("bit")
                        .HasColumnName("VIRTUALPRODUCT");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("VOLUME");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("WEIGHT");

                    b.HasKey("ProductCode")
                        .HasName("PK_ITEM");

                    b.HasIndex("ProductpageCode", "ProductgroupCode");

                    b.ToTable("PRODUCT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Productcategory", b =>
                {
                    b.Property<string>("ProductcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTCATEGORY_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.Property<string>("UpproductcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UPPRODUCTCATEGORY_CODE");

                    b.HasKey("ProductcategoryCode")
                        .HasName("PK_ITEMCATEGORY");

                    b.ToTable("PRODUCTCATEGORY", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.ProductcategoryAttribute", b =>
                {
                    b.Property<string>("ProductcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTCATEGORY_CODE");

                    b.Property<string>("AttributeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTE_CODE");

                    b.Property<int>("Coefficient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("COEFFICIENT");

                    b.Property<string>("Defaultvalue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEFAULTVALUE");

                    b.Property<string>("Maximumvalue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MAXIMUMVALUE");

                    b.Property<string>("Minimumvaue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MINIMUMVAUE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Storedprocedurename")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("STOREDPROCEDURENAME");

                    b.HasKey("ProductcategoryCode", "AttributeCode")
                        .HasName("PK_ITEMCATEGORY_ATTRIBUTE");

                    b.ToTable("PRODUCTCATEGORY_ATTRIBUTE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.ProductcategoryAttributeLov", b =>
                {
                    b.Property<string>("ProductcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTCATEGORY_CODE");

                    b.Property<string>("AttributeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTE_CODE");

                    b.Property<string>("Attributetextvalue")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTRIBUTETEXTVALUE");

                    b.Property<decimal>("Attributetextvaluenotation")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("ATTRIBUTETEXTVALUENOTATION");

                    b.HasKey("ProductcategoryCode", "AttributeCode", "Attributetextvalue")
                        .HasName("PK_ITEMCATEGORY_ATTRIBUTE_LOV");

                    b.ToTable("PRODUCTCATEGORY_ATTRIBUTE_LOV", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Productcategorytype", b =>
                {
                    b.Property<string>("ProductcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTCATEGORY_CODE");

                    b.Property<string>("ProductcategorytypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTCATEGORYTYPE_CODE");

                    b.Property<byte[]>("Icon")
                        .HasColumnType("image")
                        .HasColumnName("ICON");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.HasKey("ProductcategoryCode", "ProductcategorytypeCode")
                        .HasName("PK_ITEMCATEGORYTYPE");

                    b.ToTable("PRODUCTCATEGORYTYPE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Productsalesgroup", b =>
                {
                    b.Property<string>("ProductsalesgroupCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTSALESGROUP_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("ProductsalesgroupCode")
                        .HasName("PK_ITEMSALESGROUP");

                    b.ToTable("PRODUCTSALESGROUP", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Profile", b =>
                {
                    b.Property<string>("ProfileCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PROFILE_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.HasKey("ProfileCode");

                    b.ToTable("PROFILE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.ProfileTableattribute", b =>
                {
                    b.Property<string>("ProfileCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PROFILE_CODE");

                    b.Property<string>("Tablename")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("TABLENAME");

                    b.Property<bool>("Deleterows")
                        .HasColumnType("bit")
                        .HasColumnName("DELETEROWS");

                    b.Property<bool>("Insertrows")
                        .HasColumnType("bit")
                        .HasColumnName("INSERTROWS");

                    b.Property<bool>("Modifyrows")
                        .HasColumnType("bit")
                        .HasColumnName("MODIFYROWS");

                    b.Property<bool>("Readrows")
                        .HasColumnType("bit")
                        .HasColumnName("READROWS");

                    b.HasKey("ProfileCode", "Tablename")
                        .HasName("PK_prmPROFILE_TABLEATTRIBUTE");

                    b.ToTable("PROFILE_TABLEATTRIBUTE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.ProfileTablefieldattribute", b =>
                {
                    b.Property<string>("ProfileCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PROFILE_CODE");

                    b.Property<string>("Tablename")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("TABLENAME");

                    b.Property<string>("Fieldname")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FIELDNAME");

                    b.Property<bool>("Insertonly")
                        .HasColumnType("bit")
                        .HasColumnName("INSERTONLY");

                    b.Property<bool>("Readonly")
                        .HasColumnType("bit")
                        .HasColumnName("READONLY");

                    b.HasKey("ProfileCode", "Tablename", "Fieldname");

                    b.ToTable("PROFILE_TABLEFIELDATTRIBUTE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Readingorder", b =>
                {
                    b.Property<string>("ReadingorderCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDER_CODE");

                    b.Property<string>("AssetCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSET_CODE");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CITY");

                    b.Property<decimal>("Coefficient")
                        .HasColumnType("decimal(9, 4)")
                        .HasColumnName("COEFFICIENT");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACT_CODE");

                    b.Property<DateTime?>("Creationdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATIONDATE");

                    b.Property<int>("Digitsnumber")
                        .HasColumnType("int")
                        .HasColumnName("DIGITSNUMBER");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDDATE");

                    b.Property<decimal>("Envisagedindex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("ENVISAGEDINDEX");

                    b.Property<string>("ExecutedbypersonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EXECUTEDBYPERSON_CODE");

                    b.Property<string>("Externalreference")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EXTERNALREFERENCE");

                    b.Property<string>("Information")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("INFORMATION");

                    b.Property<string>("InstallationCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("INSTALLATION_CODE");

                    b.Property<bool?>("InternalCounter")
                        .HasColumnType("bit")
                        .HasColumnName("INTERNAL_COUNTER");

                    b.Property<string>("ItineraryCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("xxx")
                        .HasColumnName("ITINERARY_CODE");

                    b.Property<decimal>("Maximumindex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("MAXIMUMINDEX");

                    b.Property<decimal>("Minimumindex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("MINIMUMINDEX");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.Property<string>("Name2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME2");

                    b.Property<decimal?>("Newindex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("NEWINDEX");

                    b.Property<DateTime?>("Newindexdate")
                        .HasColumnType("datetime")
                        .HasColumnName("NEWINDEXDATE");

                    b.Property<string>("Num")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NUM");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("POSTALCODE");

                    b.Property<decimal>("Previousindex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("PREVIOUSINDEX");

                    b.Property<DateTime>("Previousindexdate")
                        .HasColumnType("datetime")
                        .HasColumnName("PREVIOUSINDEXDATE");

                    b.Property<string>("PreviousindexreasonCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PREVIOUSINDEXREASON_CODE");

                    b.Property<string>("PricelistCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRICELIST_CODE");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<string>("ReadingorderresultCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDERRESULT_CODE");

                    b.Property<string>("ReadingorderresultnoteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDERRESULTNOTE_CODE");

                    b.Property<string>("ReadingordertypeCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDERTYPE_CODE");

                    b.Property<string>("RoundCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ROUND_CODE");

                    b.Property<decimal>("Sequence")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("SEQUENCE");

                    b.Property<string>("Serialnumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SERIALNUMBER");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTDATE");

                    b.Property<string>("Streetname1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("STREETNAME1");

                    b.Property<string>("Streetname2")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("STREETNAME2");

                    b.Property<string>("WorkorderbatchCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKORDERBATCH_CODE");

                    b.Property<string>("Zkennziff")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ZKENNZIFF");

                    b.Property<string>("Zpruefkl")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ZPRUEFKL");

                    b.Property<string>("Zwert1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ZWERT1");

                    b.Property<string>("Zwnummer")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ZWNUMMER");

                    b.Property<string>("Zzwtyp")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ZZWTYP");

                    b.HasKey("ReadingorderCode");

                    b.HasIndex("ItineraryCode");

                    b.HasIndex("WorkorderbatchCode");

                    b.ToTable("READINGORDER", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Readingorderresultnote", b =>
                {
                    b.Property<string>("ReadingorderresultCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDERRESULT_CODE");

                    b.Property<string>("ReadingorderresultnoteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("READINGORDERRESULTNOTE_CODE");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("NoticeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NoticeText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NoticeType")
                        .HasColumnType("int");

                    b.HasKey("ReadingorderresultCode", "ReadingorderresultnoteCode")
                        .HasName("PK_READINGORDERRESULTNOTICE");

                    b.ToTable("READINGORDERRESULTNOTE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Reclamation", b =>
                {
                    b.Property<string>("ReclamationId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("RECLAMATION_ID");

                    b.Property<string>("Agent")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("AGENT");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACT_CODE");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("LastName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("NAME");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE");

                    b.HasKey("ReclamationId");

                    b.ToTable("RECLAMATION", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Round", b =>
                {
                    b.Property<string>("RoundCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ROUND_CODE");

                    b.Property<string>("AssetCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSET_CODE");

                    b.Property<string>("Attendedby2personCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTENDEDBY2PERSON_CODE");

                    b.Property<string>("AttendedbypersonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTENDEDBYPERSON_CODE");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BRANCH_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<int?>("Departuremilage")
                        .HasColumnType("int")
                        .HasColumnName("DEPARTUREMILAGE");

                    b.Property<DateTime?>("Departuretime")
                        .HasColumnType("datetime")
                        .HasColumnName("DEPARTURETIME");

                    b.Property<DateTime?>("Endtime")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDTIME");

                    b.Property<string>("ItineraryCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ITINERARY_CODE");

                    b.Property<string>("PersonCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<int>("Progresslevel")
                        .HasColumnType("int")
                        .HasColumnName("PROGRESSLEVEL");

                    b.Property<int?>("Returnmilage")
                        .HasColumnType("int")
                        .HasColumnName("RETURNMILAGE");

                    b.Property<DateTime?>("Returntime")
                        .HasColumnType("datetime")
                        .HasColumnName("RETURNTIME");

                    b.Property<DateTime>("Starttime")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTTIME");

                    b.Property<int?>("TranserbatchCode")
                        .HasColumnType("int")
                        .HasColumnName("TRANSERBATCH_CODE");

                    b.Property<DateTime?>("Transerdate")
                        .HasColumnType("datetime")
                        .HasColumnName("TRANSERDATE");

                    b.Property<string>("WorkstationCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.HasKey("RoundCode");

                    b.HasIndex("BranchCode");

                    b.HasIndex("ItineraryCode");

                    b.ToTable("ROUND", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.SapReadingOrder", b =>
                {
                    b.Property<string>("AgencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("AGENCY_CODE");

                    b.Property<int>("BatchNumber")
                        .HasColumnType("int")
                        .HasColumnName("BATCH_NUMBER");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Coefficient")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("COEFFICIENT");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CONTRACT_CODE");

                    b.Property<decimal?>("ControlKey")
                        .HasColumnType("numeric(2, 0)")
                        .HasColumnName("CONTROL_KEY");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DEVICE_CODE");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DOCUMENT_NUMBER");

                    b.Property<decimal>("EnvisagedIndex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("ENVISAGED_INDEX");

                    b.Property<string>("EqptFactorySerialNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EQPT_FACTORY_SERIAL_NUMBER");

                    b.Property<string>("EqptSerialNumber")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("EQPT_SERIAL_NUMBER");

                    b.Property<string>("EqptType")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("EQPT_TYPE");

                    b.Property<string>("ExternalReference")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EXTERNAL_REFERENCE");

                    b.Property<string>("ExtractionDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("EXTRACTION_DATE");

                    b.Property<string>("Firstname")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<string>("Information")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("INFORMATION");

                    b.Property<decimal>("InputKey")
                        .HasColumnType("numeric(8, 0)")
                        .HasColumnName("INPUT_KEY");

                    b.Property<string>("Installation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("INSTALLATION");

                    b.Property<string>("InternalCounter")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("INTERNAL_COUNTER");

                    b.Property<string>("Lastname")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("LOCATION");

                    b.Property<decimal>("MaximumIndex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("MAXIMUM_INDEX");

                    b.Property<decimal>("MinimumIndex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("MINIMUM_INDEX");

                    b.Property<decimal?>("NewIndex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("NEW_INDEX");

                    b.Property<string>("NewIndexDate")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("NEW_INDEX_DATE");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NUMBER");

                    b.Property<string>("PersonCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<string>("PersonNotice")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("PERSON_NOTICE");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("POSTAL_CODE");

                    b.Property<decimal>("PreviousIndex")
                        .HasColumnType("numeric(17, 0)")
                        .HasColumnName("PREVIOUS_INDEX");

                    b.Property<string>("PreviousIndexDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("PREVIOUS_INDEX_DATE");

                    b.Property<decimal>("PreviousIndexReason")
                        .HasColumnType("numeric(2, 0)")
                        .HasColumnName("PREVIOUS_INDEX_REASON");

                    b.Property<string>("ReadingOrderEnddate")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("READING_ORDER_ENDDATE");

                    b.Property<decimal>("ReadingOrderReason")
                        .HasColumnType("numeric(2, 0)")
                        .HasColumnName("READING_ORDER_REASON");

                    b.Property<string>("ReadingOrderStartdate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("READING_ORDER_STARTDATE");

                    b.Property<decimal>("ReadingOrderUnitSequence")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("READING_ORDER_UNIT_SEQUENCE");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<decimal>("Sequence")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("SEQUENCE");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("STREET");

                    b.Property<string>("TransferDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("TRANSFER_DATE");

                    b.Property<string>("UsualStreet")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USUAL_STREET");

                    b.ToTable("sapREADING_ORDER", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Sinvoice", b =>
                {
                    b.Property<string>("SinvoiceCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SINVOICE_CODE");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("AMOUNT");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit")
                        .HasColumnName("CANCELED");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit")
                        .HasColumnName("CLOSED");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<DateTime?>("Confirmeddate")
                        .HasColumnType("datetime")
                        .HasColumnName("CONFIRMEDDATE");

                    b.Property<int>("Consignmenttype")
                        .HasColumnType("int")
                        .HasColumnName("CONSIGNMENTTYPE");

                    b.Property<string>("ContactCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTACT_CODE");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACT_CODE");

                    b.Property<string>("Contractaccount")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTRACTACCOUNT");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CURRENCY_CODE");

                    b.Property<string>("Description")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal>("Discount1")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT1");

                    b.Property<decimal>("Discount2")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT2");

                    b.Property<decimal>("Discount3")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT3");

                    b.Property<decimal>("Discount4")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT4");

                    b.Property<decimal>("Dueamount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DUEAMOUNT");

                    b.Property<decimal>("Emptyamount")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("EMPTYAMOUNT");

                    b.Property<string>("Exonerationreference")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("EXONERATIONREFERENCE");

                    b.Property<string>("Externalreference1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("EXTERNALREFERENCE1");

                    b.Property<string>("Externalreference2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("EXTERNALREFERENCE2");

                    b.Property<decimal>("Finaldiscount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("FINALDISCOUNT");

                    b.Property<decimal>("Finaldiscountrate")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("FINALDISCOUNTRATE");

                    b.Property<decimal>("Fixedtaxamount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("FIXEDTAXAMOUNT");

                    b.Property<string>("ItineraryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ITINERARY_CODE");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.Property<string>("PartnerCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNER_CODE");

                    b.Property<string>("PaymentCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PAYMENT_CODE");

                    b.Property<string>("PaymenttermCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PAYMENTTERM_CODE");

                    b.Property<string>("PersonCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<int?>("Printingaccount")
                        .HasColumnType("int")
                        .HasColumnName("PRINTINGACCOUNT");

                    b.Property<string>("ProductsalesgroupCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTSALESGROUP_CODE");

                    b.Property<int>("Progresslevel")
                        .HasColumnType("int")
                        .HasColumnName("PROGRESSLEVEL");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PROJECT_CODE");

                    b.Property<DateTime?>("Requesteddate")
                        .HasColumnType("datetime")
                        .HasColumnName("REQUESTEDDATE");

                    b.Property<string>("RoundCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ROUND_CODE");

                    b.Property<int>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.Property<string>("SinvoicestatusCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SINVOICESTATUS_CODE");

                    b.Property<string>("SinvoicetypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SINVOICETYPE_CODE");

                    b.Property<string>("SorderCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SORDER_CODE");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SUPPLIER_CODE");

                    b.Property<DateTime>("Thedate")
                        .HasColumnType("datetime")
                        .HasColumnName("THEDATE");

                    b.Property<string>("Trackingkey")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TRACKINGKEY");

                    b.Property<string>("UserCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERFIELD2");

                    b.Property<decimal>("Vat1amount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("VAT1AMOUNT");

                    b.Property<decimal>("Vat2amount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("VAT2AMOUNT");

                    b.Property<string>("VisitCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VISIT_CODE");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WAREHOUSE_CODE");

                    b.HasKey("SinvoiceCode");

                    b.HasIndex("ItineraryCode");

                    b.ToTable("SINVOICE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.SinvoiceLine", b =>
                {
                    b.Property<string>("SinvoiceCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SINVOICE_CODE");

                    b.Property<int>("SinvoiceLineNumber")
                        .HasColumnType("int")
                        .HasColumnName("SINVOICE_LINE_NUMBER");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<DateTime?>("Confirmeddate")
                        .HasColumnType("datetime")
                        .HasColumnName("CONFIRMEDDATE");

                    b.Property<decimal>("Damagedquantity")
                        .HasColumnType("decimal(14, 3)")
                        .HasColumnName("DAMAGEDQUANTITY");

                    b.Property<string>("Description")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal>("Discount1")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT1");

                    b.Property<decimal>("Discount2")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT2");

                    b.Property<decimal>("Discount3")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT3");

                    b.Property<decimal>("Discount4")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("DISCOUNT4");

                    b.Property<decimal>("Freequantity")
                        .HasColumnType("decimal(14, 3)")
                        .HasColumnName("FREEQUANTITY");

                    b.Property<decimal>("Netunitprice")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("NETUNITPRICE");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<decimal>("Promorate")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("PROMORATE");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(14, 3)")
                        .HasColumnName("QUANTITY");

                    b.Property<DateTime?>("Requesteddate")
                        .HasColumnType("datetime")
                        .HasColumnName("REQUESTEDDATE");

                    b.Property<decimal>("Returnedquantity")
                        .HasColumnType("decimal(14, 3)")
                        .HasColumnName("RETURNEDQUANTITY");

                    b.Property<bool>("Soldout")
                        .HasColumnType("bit")
                        .HasColumnName("SOLDOUT");

                    b.Property<decimal>("Unitprice")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("UNITPRICE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERFIELD2");

                    b.Property<decimal>("Vat1")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("VAT1");

                    b.Property<decimal>("Vat2")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("VAT2");

                    b.HasKey("SinvoiceCode", "SinvoiceLineNumber");

                    b.ToTable("SINVOICE_LINE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.TmpPayment", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("PaymentCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PAYMENT_CODE");

                    b.ToTable("TMP_PAYMENT", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.TmpPerformance", b =>
                {
                    b.Property<int?>("AnnomalieNumber")
                        .HasColumnType("int")
                        .HasColumnName("ANNOMALIE_NUMBER");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<int?>("CompterNumber")
                        .HasColumnType("int")
                        .HasColumnName("COMPTER_NUMBER");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDDATE");

                    b.Property<int?>("InstallationnullNumber")
                        .HasColumnType("int")
                        .HasColumnName("INSTALLATIONNULL_NUMBER");

                    b.Property<string>("ItinerarCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ITINERAR_CODE");

                    b.Property<string>("PersonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTDATE");

                    b.Property<decimal?>("Tauxrelve")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("TAUXRELVE");

                    b.ToTable("TMP_PERFORMANCE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.TmpSituationperformance", b =>
                {
                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDDATE");

                    b.Property<string>("ItineraryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ITINERARY_CODE");

                    b.Property<string>("PersonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<int?>("ReleveNumber")
                        .HasColumnType("int")
                        .HasColumnName("RELEVE_NUMBER");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTDATE");

                    b.Property<decimal?>("TauxReleve")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("TAUX_RELEVE");

                    b.Property<int?>("UnitereleveNumber")
                        .HasColumnType("int")
                        .HasColumnName("UNITERELEVE_NUMBER");

                    b.ToTable("TMP_SITUATIONPERFORMANCE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Tokenserie", b =>
                {
                    b.Property<string>("TokenserieCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TOKENSERIE_CODE");

                    b.Property<int>("Delnotenextnumber")
                        .HasColumnType("int")
                        .HasColumnName("DELNOTENEXTNUMBER");

                    b.Property<string>("Delnoteprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("DELNOTEPREFIX");

                    b.Property<int>("Digitsincounter")
                        .HasColumnType("int")
                        .HasColumnName("DIGITSINCOUNTER");

                    b.Property<int>("Equipmentnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("EQUIPMENTNEXTNUMBER");

                    b.Property<string>("Equipmentprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("EQUIPMENTPREFIX");

                    b.Property<int>("Expensenextnumber")
                        .HasColumnType("int")
                        .HasColumnName("EXPENSENEXTNUMBER");

                    b.Property<string>("Expenseprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("EXPENSEPREFIX");

                    b.Property<int>("Facingnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("FACINGNEXTNUMBER");

                    b.Property<string>("Facingprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("FACINGPREFIX");

                    b.Property<int>("Interviewnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("INTERVIEWNEXTNUMBER");

                    b.Property<string>("Interviewprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("INTERVIEWPREFIX");

                    b.Property<int>("Inventorynextnumber")
                        .HasColumnType("int")
                        .HasColumnName("INVENTORYNEXTNUMBER");

                    b.Property<string>("Inventoryprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("INVENTORYPREFIX");

                    b.Property<int>("Invoicenextnumber")
                        .HasColumnType("int")
                        .HasColumnName("INVOICENEXTNUMBER");

                    b.Property<string>("Invoiceprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("INVOICEPREFIX");

                    b.Property<int>("Loadnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("LOADNEXTNUMBER");

                    b.Property<string>("Loadprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("LOADPREFIX");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<int>("Ordernextnumber")
                        .HasColumnType("int")
                        .HasColumnName("ORDERNEXTNUMBER");

                    b.Property<string>("Orderprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("ORDERPREFIX");

                    b.Property<int>("Partnernextnumber")
                        .HasColumnType("int")
                        .HasColumnName("PARTNERNEXTNUMBER");

                    b.Property<string>("Partnerprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("PARTNERPREFIX");

                    b.Property<int>("Paymentnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("PAYMENTNEXTNUMBER");

                    b.Property<string>("Paymentprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("PAYMENTPREFIX");

                    b.Property<int>("Projectnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("PROJECTNEXTNUMBER");

                    b.Property<string>("Projectprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("PROJECTPREFIX");

                    b.Property<int>("Roundnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("ROUNDNEXTNUMBER");

                    b.Property<string>("Roundprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("ROUNDPREFIX");

                    b.Property<int>("Visitnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("VISITNEXTNUMBER");

                    b.Property<string>("Visitprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("VISITPREFIX");

                    b.Property<int>("WmRequestnextnumber")
                        .HasColumnType("int")
                        .HasColumnName("WM_REQUESTNEXTNUMBER");

                    b.Property<string>("WmRequestprefix")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("WM_REQUESTPREFIX");

                    b.HasKey("TokenserieCode");

                    b.ToTable("TOKENSERIE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Actif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CodeAgence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_agence");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateDerniereConnexion")
                        .HasColumnType("datetime");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomUtilisateur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC075A2672A1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AssabileApi.Models.Workorderbatch", b =>
                {
                    b.Property<string>("WorkorderbatchCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKORDERBATCH_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<DateTime>("Thedate")
                        .HasColumnType("datetime")
                        .HasColumnName("THEDATE");

                    b.Property<string>("WorkorderbatchstatusCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKORDERBATCHSTATUS_CODE");

                    b.Property<string>("WorkorderbatchtypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKORDERBATCHTYPE_CODE");

                    b.Property<string>("WorkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.HasKey("WorkorderbatchCode");

                    b.ToTable("WORKORDERBATCH", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Worksite", b =>
                {
                    b.Property<string>("WorksiteCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSITE_CODE");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CITY");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("COUNTRY");

                    b.Property<string>("Extendedadress")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("EXTENDEDADRESS");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FAX");

                    b.Property<string>("GeoareaCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOAREA_CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("Num")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NUM");

                    b.Property<string>("PartnerCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PARTNER_CODE");

                    b.Property<string>("Phone1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE1");

                    b.Property<string>("Phone2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE2");

                    b.Property<string>("Postalcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("POSTALCODE");

                    b.Property<string>("State")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("STATE");

                    b.Property<string>("Streetname1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("STREETNAME1");

                    b.Property<string>("Streetname2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("STREETNAME2");

                    b.Property<string>("WorksitecategoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WORKSITECATEGORY_CODE");

                    b.Property<string>("WorksitecategorytypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WORKSITECATEGORYTYPE_CODE");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<int>("Z")
                        .HasColumnType("int");

                    b.HasKey("WorksiteCode")
                        .HasName("PK_PARTNERSITE");

                    b.HasIndex("GeoareaCode");

                    b.HasIndex("PartnerCode");

                    b.ToTable("WORKSITE", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Workstation", b =>
                {
                    b.Property<string>("WorkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.Property<string>("Attendedby2personCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTENDEDBY2PERSON_CODE");

                    b.Property<string>("AttendedbypersonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATTENDEDBYPERSON_CODE");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BRANCH_CODE");

                    b.Property<string>("BudgetCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BUDGET_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<decimal?>("Currentcredit")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("CURRENTCREDIT");

                    b.Property<decimal?>("Currentstockvalue")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("CURRENTSTOCKVALUE");

                    b.Property<string>("DatabaseCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("MYDOCUMENTS")
                        .HasColumnName("DATABASE_CODE");

                    b.Property<string>("GeoareaCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GEOAREA_CODE");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTUPDATE");

                    b.Property<decimal?>("Maximumcredit")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("MAXIMUMCREDIT");

                    b.Property<decimal?>("Maximumstockvalue")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("MAXIMUMSTOCKVALUE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NAME");

                    b.Property<string>("PersonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PERSON_CODE");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE");

                    b.Property<string>("ProfileCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("?")
                        .HasColumnName("PROFILE_CODE");

                    b.Property<int?>("Securitylevel")
                        .HasColumnType("int")
                        .HasColumnName("SECURITYLEVEL");

                    b.Property<string>("UpworkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UPWORKSTATION_CODE");

                    b.Property<string>("UserCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_CODE");

                    b.Property<string>("Userfield1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("USERFIELD1");

                    b.Property<string>("Userfield2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERFIELD2");

                    b.Property<string>("WorksiteCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("?")
                        .HasColumnName("WORKSITE_CODE");

                    b.Property<string>("WorkstationcategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATIONCATEGORY_CODE");

                    b.Property<string>("WorkstationcategorytypeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATIONCATEGORYTYPE_CODE");

                    b.HasKey("WorkstationCode");

                    b.HasIndex("BranchCode");

                    b.HasIndex("DatabaseCode");

                    b.HasIndex("GeoareaCode");

                    b.HasIndex("PersonCode");

                    b.HasIndex("WorksiteCode");

                    b.ToTable("WORKSTATION", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.WorkstationItinerary", b =>
                {
                    b.Property<string>("WorkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.Property<string>("ItineraryCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ITINERARY_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("RANK");

                    b.HasKey("WorkstationCode", "ItineraryCode")
                        .HasName("PK_WORKSTATION_LOCATION");

                    b.HasIndex("ItineraryCode");

                    b.ToTable("WORKSTATION_ITINERARY", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.WorkstationTokenserie", b =>
                {
                    b.Property<string>("WorkstationCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("WORKSTATION_CODE");

                    b.Property<string>("ProductsalesgroupCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PRODUCTSALESGROUP_CODE");

                    b.Property<string>("CodeAgence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE_AGENCE");

                    b.Property<string>("TokenserieCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TOKENSERIE_CODE");

                    b.HasKey("WorkstationCode", "ProductsalesgroupCode");

                    b.HasIndex("ProductsalesgroupCode");

                    b.HasIndex("TokenserieCode");

                    b.ToTable("WORKSTATION_TOKENSERIE", (string)null);
                });

            modelBuilder.Entity("ProfileAssabilfunction", b =>
                {
                    b.Property<string>("ProfileCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PROFILE_CODE");

                    b.Property<string>("AssabilfunctionCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ASSABILFUNCTION_CODE");

                    b.HasKey("ProfileCode", "AssabilfunctionCode");

                    b.HasIndex("AssabilfunctionCode");

                    b.ToTable("PROFILE_ASSABILFUNCTION", (string)null);
                });

            modelBuilder.Entity("AssabileApi.Models.Asset", b =>
                {
                    b.HasOne("AssabileApi.Models.Workstation", "MangementworkstationCodeNavigation")
                        .WithMany("AssetMangementworkstationCodeNavigations")
                        .HasForeignKey("MangementworkstationCode")
                        .HasConstraintName("FK_ASSET_WORKSTATION1");

                    b.HasOne("AssabileApi.Models.Product", "ProductCodeNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("ProductCode")
                        .IsRequired()
                        .HasConstraintName("FK_ASSET_PRODUCT");

                    b.HasOne("AssabileApi.Models.Asset", "UpassetCodeNavigation")
                        .WithMany("InverseUpassetCodeNavigation")
                        .HasForeignKey("UpassetCode")
                        .HasConstraintName("FK_ASSET_ASSET");

                    b.HasOne("AssabileApi.Models.Worksite", "WorksiteCodeNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("WorksiteCode")
                        .HasConstraintName("FK_ASSET_WORKSITE");

                    b.HasOne("AssabileApi.Models.Workstation", "WorkstationCodeNavigation")
                        .WithMany("AssetWorkstationCodeNavigations")
                        .HasForeignKey("WorkstationCode")
                        .HasConstraintName("FK_ASSET_WORKSTATION");

                    b.Navigation("MangementworkstationCodeNavigation");

                    b.Navigation("ProductCodeNavigation");

                    b.Navigation("UpassetCodeNavigation");

                    b.Navigation("WorksiteCodeNavigation");

                    b.Navigation("WorkstationCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.AssetAttribute", b =>
                {
                    b.HasOne("AssabileApi.Models.Asset", "AssetCodeNavigation")
                        .WithMany("AssetAttributes")
                        .HasForeignKey("AssetCode")
                        .IsRequired()
                        .HasConstraintName("FK_ASSET_ATTRIBUTE_ASSET");

                    b.Navigation("AssetCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.CompanyProductsalesgroup", b =>
                {
                    b.HasOne("AssabileApi.Models.Branch", "BranchCodeNavigation")
                        .WithMany("CompanyProductsalesgroups")
                        .HasForeignKey("BranchCode")
                        .IsRequired()
                        .HasConstraintName("FK_COMPANY_PRODUCTSALESGROUP_COMPANY");

                    b.HasOne("AssabileApi.Models.Productsalesgroup", "ProductsalesgroupCodeNavigation")
                        .WithMany("CompanyProductsalesgroups")
                        .HasForeignKey("ProductsalesgroupCode")
                        .IsRequired()
                        .HasConstraintName("FK_COMPANY_PRODUCTSALESGROUP_PRODUCTSALESGROUP");

                    b.Navigation("BranchCodeNavigation");

                    b.Navigation("ProductsalesgroupCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Contact", b =>
                {
                    b.HasOne("AssabileApi.Models.Partner", "PartnerCodeNavigation")
                        .WithMany("Contacts")
                        .HasForeignKey("PartnerCode")
                        .IsRequired()
                        .HasConstraintName("FK_CONTACT_PARTNER");

                    b.Navigation("PartnerCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Contract", b =>
                {
                    b.HasOne("AssabileApi.Models.Partner", "PartnerCodeNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("PartnerCode")
                        .IsRequired()
                        .HasConstraintName("FK_CONTRACT_PARTNER");

                    b.Navigation("PartnerCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Geoarea", b =>
                {
                    b.HasOne("AssabileApi.Models.Geoobject", "GeoobjectCodeNavigation")
                        .WithMany("Geoareas")
                        .HasForeignKey("GeoobjectCode")
                        .HasConstraintName("FK_GEOAREA_GEOOBJECT");

                    b.HasOne("AssabileApi.Models.Geoarea", "UpgeoareaCodeNavigation")
                        .WithMany("InverseUpgeoareaCodeNavigation")
                        .HasForeignKey("UpgeoareaCode")
                        .HasConstraintName("FK_GEOAREA_GEOAREA");

                    b.Navigation("GeoobjectCodeNavigation");

                    b.Navigation("UpgeoareaCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.GeoobjectBorder", b =>
                {
                    b.HasOne("AssabileApi.Models.Geoobject", "GeoobjectCodeNavigation")
                        .WithMany("GeoobjectBorders")
                        .HasForeignKey("GeoobjectCode")
                        .IsRequired()
                        .HasConstraintName("FK_GEOOBJECT_BORDER_GEOOBJECT");

                    b.Navigation("GeoobjectCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.GeoplanBackgroundimage", b =>
                {
                    b.HasOne("AssabileApi.Models.Backgroundimage", "BackgroundimageCodeNavigation")
                        .WithMany("GeoplanBackgroundimages")
                        .HasForeignKey("BackgroundimageCode")
                        .IsRequired()
                        .HasConstraintName("FK_GEOPLAN_BACKGROUNDIMAGE_BACKGROUNDIMAGE");

                    b.HasOne("AssabileApi.Models.Geoplan", "GeoplanCodeNavigation")
                        .WithMany("GeoplanBackgroundimages")
                        .HasForeignKey("GeoplanCode")
                        .IsRequired()
                        .HasConstraintName("FK_GEOPLAN_BACKGROUNDIMAGE_GEOPLAN1");

                    b.Navigation("BackgroundimageCodeNavigation");

                    b.Navigation("GeoplanCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.GeoplanGeoobject", b =>
                {
                    b.HasOne("AssabileApi.Models.Geoobject", "GeoobjectCodeNavigation")
                        .WithMany("GeoplanGeoobjects")
                        .HasForeignKey("GeoobjectCode")
                        .IsRequired()
                        .HasConstraintName("FK_GEOPLAN_GEOOBJECT_GEOOBJECT");

                    b.HasOne("AssabileApi.Models.Geoplan", "GeoplanCodeNavigation")
                        .WithMany("GeoplanGeoobjects")
                        .HasForeignKey("GeoplanCode")
                        .IsRequired()
                        .HasConstraintName("FK_GEOPLAN_GEOOBJECT_GEOPLAN");

                    b.Navigation("GeoobjectCodeNavigation");

                    b.Navigation("GeoplanCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Installation", b =>
                {
                    b.HasOne("AssabileApi.Models.Asset", "AssetCodeNavigation")
                        .WithMany("Installations")
                        .HasForeignKey("AssetCode")
                        .HasConstraintName("FK_INSTALLATION_ASSET");

                    b.HasOne("AssabileApi.Models.Contract", "ContractCodeNavigation")
                        .WithMany("Installations")
                        .HasForeignKey("ContractCode")
                        .HasConstraintName("FK_INSTALLATION_CONTRACT");

                    b.HasOne("AssabileApi.Models.Worksite", "WorksiteCodeNavigation")
                        .WithMany("Installations")
                        .HasForeignKey("WorksiteCode")
                        .HasConstraintName("FK_INSTALLATION_WORKSITE");

                    b.Navigation("AssetCodeNavigation");

                    b.Navigation("ContractCodeNavigation");

                    b.Navigation("WorksiteCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.ItineraryLine", b =>
                {
                    b.HasOne("AssabileApi.Models.Itinerary", "ItineraryCodeNavigation")
                        .WithMany("ItineraryLines")
                        .HasForeignKey("ItineraryCode")
                        .IsRequired()
                        .HasConstraintName("FK_ITINERARY_LINE_ITINERARY");

                    b.HasOne("AssabileApi.Models.Worksite", "WorksiteCodeNavigation")
                        .WithMany("ItineraryLines")
                        .HasForeignKey("WorksiteCode")
                        .IsRequired()
                        .HasConstraintName("FK_ITINERARY_LINE_WORKSITE");

                    b.Navigation("ItineraryCodeNavigation");

                    b.Navigation("WorksiteCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.LanguageTablefieldattribute", b =>
                {
                    b.HasOne("AssabileApi.Models.Language", "LanguageCodeNavigation")
                        .WithMany("LanguageTablefieldattributes")
                        .HasForeignKey("LanguageCode")
                        .IsRequired()
                        .HasConstraintName("FK_LANGUAGE_TABLEFIELDATTRIBUTE_LANGUAGE");

                    b.Navigation("LanguageCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Partner", b =>
                {
                    b.HasOne("AssabileApi.Models.Partneridtype", "PartneridtypeCodeNavigation")
                        .WithMany("Partners")
                        .HasForeignKey("PartneridtypeCode")
                        .HasConstraintName("FK_PARTNER_PARTNERIDTYPE");

                    b.HasOne("AssabileApi.Models.Partnerstatus", "PartnerstatusCodeNavigation")
                        .WithMany("Partners")
                        .HasForeignKey("PartnerstatusCode")
                        .IsRequired()
                        .HasConstraintName("FK_PARTNER_PARTNERSTATUS");

                    b.HasOne("AssabileApi.Models.Partner", "UppartnerCodeNavigation")
                        .WithMany("InverseUppartnerCodeNavigation")
                        .HasForeignKey("UppartnerCode")
                        .HasConstraintName("FK_PARTNER_PARTNER");

                    b.HasOne("AssabileApi.Models.Workstation", "WorkstationCodeNavigation")
                        .WithMany("Partners")
                        .HasForeignKey("WorkstationCode")
                        .IsRequired()
                        .HasConstraintName("FK_PARTNER_WORKSTATION");

                    b.HasOne("AssabileApi.Models.Partnercategorytype", "Partnercategorytype")
                        .WithMany("Partners")
                        .HasForeignKey("PartnercategoryCode", "PartnertypeCode")
                        .IsRequired()
                        .HasConstraintName("FK_PARTNER_PARTNERCATEGORYTYPE");

                    b.Navigation("Partnercategorytype");

                    b.Navigation("PartneridtypeCodeNavigation");

                    b.Navigation("PartnerstatusCodeNavigation");

                    b.Navigation("UppartnerCodeNavigation");

                    b.Navigation("WorkstationCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Partnercategorytype", b =>
                {
                    b.HasOne("AssabileApi.Models.Partnercategory", "PartnercategoryCodeNavigation")
                        .WithMany("Partnercategorytypes")
                        .HasForeignKey("PartnercategoryCode")
                        .IsRequired()
                        .HasConstraintName("FK_PARTNERCATEGORYTYPE_PARTNERCATEGORY");

                    b.Navigation("PartnercategoryCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Person", b =>
                {
                    b.HasOne("AssabileApi.Models.Profile", "ProfileCodeNavigation")
                        .WithMany("People")
                        .HasForeignKey("ProfileCode")
                        .IsRequired()
                        .HasConstraintName("FK_PERSON_PROFILE");

                    b.Navigation("ProfileCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Product", b =>
                {
                    b.HasOne("AssabileApi.Models.Productcategorytype", "Productcategorytype")
                        .WithMany("Products")
                        .HasForeignKey("ProductpageCode", "ProductgroupCode")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCT_PRODUCTCATEGORYTYPE");

                    b.Navigation("Productcategorytype");
                });

            modelBuilder.Entity("AssabileApi.Models.ProductcategoryAttribute", b =>
                {
                    b.HasOne("AssabileApi.Models.Productcategory", "ProductcategoryCodeNavigation")
                        .WithMany("ProductcategoryAttributes")
                        .HasForeignKey("ProductcategoryCode")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTCATEGORY_ATTRIBUTE_PRODUCTCATEGORY");

                    b.Navigation("ProductcategoryCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.ProductcategoryAttributeLov", b =>
                {
                    b.HasOne("AssabileApi.Models.ProductcategoryAttribute", "ProductcategoryAttribute")
                        .WithMany("ProductcategoryAttributeLovs")
                        .HasForeignKey("ProductcategoryCode", "AttributeCode")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTCATEGORY_ATTRIBUTE_LOV_PRODUCTCATEGORY_ATTRIBUTE");

                    b.Navigation("ProductcategoryAttribute");
                });

            modelBuilder.Entity("AssabileApi.Models.Productcategorytype", b =>
                {
                    b.HasOne("AssabileApi.Models.Productcategory", "ProductcategoryCodeNavigation")
                        .WithMany("Productcategorytypes")
                        .HasForeignKey("ProductcategoryCode")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTCATEGORYTYPE_PRODUCTCATEGORY");

                    b.Navigation("ProductcategoryCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.ProfileTableattribute", b =>
                {
                    b.HasOne("AssabileApi.Models.Profile", "ProfileCodeNavigation")
                        .WithMany("ProfileTableattributes")
                        .HasForeignKey("ProfileCode")
                        .IsRequired()
                        .HasConstraintName("FK_PROFILE_TABLEATTRIBUTE_PROFILE");

                    b.Navigation("ProfileCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.ProfileTablefieldattribute", b =>
                {
                    b.HasOne("AssabileApi.Models.ProfileTableattribute", "ProfileTableattribute")
                        .WithMany("ProfileTablefieldattributes")
                        .HasForeignKey("ProfileCode", "Tablename")
                        .IsRequired()
                        .HasConstraintName("FK_PROFILE_TABLEFIELDATTRIBUTE_PROFILE_TABLEATTRIBUTE");

                    b.Navigation("ProfileTableattribute");
                });

            modelBuilder.Entity("AssabileApi.Models.Readingorder", b =>
                {
                    b.HasOne("AssabileApi.Models.Itinerary", "ItineraryCodeNavigation")
                        .WithMany("Readingorders")
                        .HasForeignKey("ItineraryCode")
                        .IsRequired()
                        .HasConstraintName("FK_READINGORDER_ITINERARY");

                    b.HasOne("AssabileApi.Models.Workorderbatch", "WorkorderbatchCodeNavigation")
                        .WithMany("Readingorders")
                        .HasForeignKey("WorkorderbatchCode")
                        .IsRequired()
                        .HasConstraintName("FK_READINGORDER_WORKORDERBATCH");

                    b.Navigation("ItineraryCodeNavigation");

                    b.Navigation("WorkorderbatchCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Readingorderresultnote", b =>
                {
                    b.HasOne("AssabileApi.Models.PrmReadingorderresult", "ReadingorderresultCodeNavigation")
                        .WithMany("Readingorderresultnotes")
                        .HasForeignKey("ReadingorderresultCode")
                        .IsRequired()
                        .HasConstraintName("FK_READINGORDERRESULTNOTE_prmREADINGORDERRESULT");

                    b.Navigation("ReadingorderresultCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Round", b =>
                {
                    b.HasOne("AssabileApi.Models.Branch", "BranchCodeNavigation")
                        .WithMany("Rounds")
                        .HasForeignKey("BranchCode")
                        .IsRequired()
                        .HasConstraintName("FK_ROUND_COMPANY");

                    b.HasOne("AssabileApi.Models.Itinerary", "ItineraryCodeNavigation")
                        .WithMany("Rounds")
                        .HasForeignKey("ItineraryCode")
                        .IsRequired()
                        .HasConstraintName("FK_ROUND_ITINERARY");

                    b.Navigation("BranchCodeNavigation");

                    b.Navigation("ItineraryCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Sinvoice", b =>
                {
                    b.HasOne("AssabileApi.Models.Itinerary", "ItineraryCodeNavigation")
                        .WithMany("Sinvoices")
                        .HasForeignKey("ItineraryCode")
                        .HasConstraintName("FK_SINVOICE_ITINERARY");

                    b.Navigation("ItineraryCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Worksite", b =>
                {
                    b.HasOne("AssabileApi.Models.Geoarea", "GeoareaCodeNavigation")
                        .WithMany("Worksites")
                        .HasForeignKey("GeoareaCode")
                        .HasConstraintName("FK_WORKSITE_GEOAREA");

                    b.HasOne("AssabileApi.Models.Partner", "PartnerCodeNavigation")
                        .WithMany("Worksites")
                        .HasForeignKey("PartnerCode")
                        .IsRequired()
                        .HasConstraintName("FK_PARTNERSITE_PARTNER");

                    b.Navigation("GeoareaCodeNavigation");

                    b.Navigation("PartnerCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Workstation", b =>
                {
                    b.HasOne("AssabileApi.Models.Branch", "BranchCodeNavigation")
                        .WithMany("Workstations")
                        .HasForeignKey("BranchCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_COMPANY");

                    b.HasOne("AssabileApi.Models.Database", "DatabaseCodeNavigation")
                        .WithMany("Workstations")
                        .HasForeignKey("DatabaseCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_DATABASE");

                    b.HasOne("AssabileApi.Models.Geoarea", "GeoareaCodeNavigation")
                        .WithMany("Workstations")
                        .HasForeignKey("GeoareaCode")
                        .HasConstraintName("FK_WORKSTATION_LOCATION");

                    b.HasOne("AssabileApi.Models.Person", "PersonCodeNavigation")
                        .WithMany("Workstations")
                        .HasForeignKey("PersonCode")
                        .HasConstraintName("FK_WORKSTATION_PERSON");

                    b.HasOne("AssabileApi.Models.Worksite", "WorksiteCodeNavigation")
                        .WithMany("Workstations")
                        .HasForeignKey("WorksiteCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_WORKSITE");

                    b.Navigation("BranchCodeNavigation");

                    b.Navigation("DatabaseCodeNavigation");

                    b.Navigation("GeoareaCodeNavigation");

                    b.Navigation("PersonCodeNavigation");

                    b.Navigation("WorksiteCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.WorkstationItinerary", b =>
                {
                    b.HasOne("AssabileApi.Models.Itinerary", "ItineraryCodeNavigation")
                        .WithMany("WorkstationItineraries")
                        .HasForeignKey("ItineraryCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_ITINERARY_ITINERARY");

                    b.HasOne("AssabileApi.Models.Workstation", "WorkstationCodeNavigation")
                        .WithMany("WorkstationItineraries")
                        .HasForeignKey("WorkstationCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_ITINERARY_WORKSTATION");

                    b.Navigation("ItineraryCodeNavigation");

                    b.Navigation("WorkstationCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.WorkstationTokenserie", b =>
                {
                    b.HasOne("AssabileApi.Models.Productsalesgroup", "ProductsalesgroupCodeNavigation")
                        .WithMany("WorkstationTokenseries")
                        .HasForeignKey("ProductsalesgroupCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_TOKENSERIE_PRODUCTSALESGROUP");

                    b.HasOne("AssabileApi.Models.Tokenserie", "TokenserieCodeNavigation")
                        .WithMany("WorkstationTokenseries")
                        .HasForeignKey("TokenserieCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_TOKENSERIE_TOKENSERIE");

                    b.HasOne("AssabileApi.Models.Workstation", "WorkstationCodeNavigation")
                        .WithMany("WorkstationTokenseries")
                        .HasForeignKey("WorkstationCode")
                        .IsRequired()
                        .HasConstraintName("FK_WORKSTATION_TOKENSERIE_WORKSTATION");

                    b.Navigation("ProductsalesgroupCodeNavigation");

                    b.Navigation("TokenserieCodeNavigation");

                    b.Navigation("WorkstationCodeNavigation");
                });

            modelBuilder.Entity("ProfileAssabilfunction", b =>
                {
                    b.HasOne("AssabileApi.Models.PrmAssabilfunction", null)
                        .WithMany()
                        .HasForeignKey("AssabilfunctionCode")
                        .IsRequired()
                        .HasConstraintName("FK_PROFILE_ASSABILFUNCTION_prmASSABILFUNCTION");

                    b.HasOne("AssabileApi.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("ProfileCode")
                        .IsRequired()
                        .HasConstraintName("FK_PROFILE_ASSABILFUNCTION_PROFILE");
                });

            modelBuilder.Entity("AssabileApi.Models.Asset", b =>
                {
                    b.Navigation("AssetAttributes");

                    b.Navigation("Installations");

                    b.Navigation("InverseUpassetCodeNavigation");
                });

            modelBuilder.Entity("AssabileApi.Models.Backgroundimage", b =>
                {
                    b.Navigation("GeoplanBackgroundimages");
                });

            modelBuilder.Entity("AssabileApi.Models.Branch", b =>
                {
                    b.Navigation("CompanyProductsalesgroups");

                    b.Navigation("Rounds");

                    b.Navigation("Workstations");
                });

            modelBuilder.Entity("AssabileApi.Models.Contract", b =>
                {
                    b.Navigation("Installations");
                });

            modelBuilder.Entity("AssabileApi.Models.Database", b =>
                {
                    b.Navigation("Workstations");
                });

            modelBuilder.Entity("AssabileApi.Models.Geoarea", b =>
                {
                    b.Navigation("InverseUpgeoareaCodeNavigation");

                    b.Navigation("Worksites");

                    b.Navigation("Workstations");
                });

            modelBuilder.Entity("AssabileApi.Models.Geoobject", b =>
                {
                    b.Navigation("Geoareas");

                    b.Navigation("GeoobjectBorders");

                    b.Navigation("GeoplanGeoobjects");
                });

            modelBuilder.Entity("AssabileApi.Models.Geoplan", b =>
                {
                    b.Navigation("GeoplanBackgroundimages");

                    b.Navigation("GeoplanGeoobjects");
                });

            modelBuilder.Entity("AssabileApi.Models.Itinerary", b =>
                {
                    b.Navigation("ItineraryLines");

                    b.Navigation("Readingorders");

                    b.Navigation("Rounds");

                    b.Navigation("Sinvoices");

                    b.Navigation("WorkstationItineraries");
                });

            modelBuilder.Entity("AssabileApi.Models.Language", b =>
                {
                    b.Navigation("LanguageTablefieldattributes");
                });

            modelBuilder.Entity("AssabileApi.Models.Partner", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Contracts");

                    b.Navigation("InverseUppartnerCodeNavigation");

                    b.Navigation("Worksites");
                });

            modelBuilder.Entity("AssabileApi.Models.Partnercategory", b =>
                {
                    b.Navigation("Partnercategorytypes");
                });

            modelBuilder.Entity("AssabileApi.Models.Partnercategorytype", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("AssabileApi.Models.Partneridtype", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("AssabileApi.Models.Partnerstatus", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("AssabileApi.Models.Person", b =>
                {
                    b.Navigation("Workstations");
                });

            modelBuilder.Entity("AssabileApi.Models.PrmReadingorderresult", b =>
                {
                    b.Navigation("Readingorderresultnotes");
                });

            modelBuilder.Entity("AssabileApi.Models.Product", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssabileApi.Models.Productcategory", b =>
                {
                    b.Navigation("ProductcategoryAttributes");

                    b.Navigation("Productcategorytypes");
                });

            modelBuilder.Entity("AssabileApi.Models.ProductcategoryAttribute", b =>
                {
                    b.Navigation("ProductcategoryAttributeLovs");
                });

            modelBuilder.Entity("AssabileApi.Models.Productcategorytype", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AssabileApi.Models.Productsalesgroup", b =>
                {
                    b.Navigation("CompanyProductsalesgroups");

                    b.Navigation("WorkstationTokenseries");
                });

            modelBuilder.Entity("AssabileApi.Models.Profile", b =>
                {
                    b.Navigation("People");

                    b.Navigation("ProfileTableattributes");
                });

            modelBuilder.Entity("AssabileApi.Models.ProfileTableattribute", b =>
                {
                    b.Navigation("ProfileTablefieldattributes");
                });

            modelBuilder.Entity("AssabileApi.Models.Tokenserie", b =>
                {
                    b.Navigation("WorkstationTokenseries");
                });

            modelBuilder.Entity("AssabileApi.Models.Workorderbatch", b =>
                {
                    b.Navigation("Readingorders");
                });

            modelBuilder.Entity("AssabileApi.Models.Worksite", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Installations");

                    b.Navigation("ItineraryLines");

                    b.Navigation("Workstations");
                });

            modelBuilder.Entity("AssabileApi.Models.Workstation", b =>
                {
                    b.Navigation("AssetMangementworkstationCodeNavigations");

                    b.Navigation("AssetWorkstationCodeNavigations");

                    b.Navigation("Partners");

                    b.Navigation("WorkstationItineraries");

                    b.Navigation("WorkstationTokenseries");
                });
#pragma warning restore 612, 618
        }
    }
}
